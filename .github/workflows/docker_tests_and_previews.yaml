name: Docker tests & previews
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

permissions:
  packages: write
  actions: read

env:
  IMAGE_NAME: 'ghcr.io/${{ github.repository }}'
  TAG: ${{ github.sha }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  TF_VAR_admin_key: ${{ secrets.ADMIN_KEY_DEV }}

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v33
        with:
          files: |
            frontend/**
            yarn.lock
            package.json
            Dockerfile.frontend
            docker-compose.cypress.yaml
          files_ignore: |
            *.md
            *.png
            *.ico
            *.svg
            *.test.tsx
            frontend/.gitignore
            frontend/.env.example

      - name: Login to GitHub Container Registry
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build frontend with cache and push to registry
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          docker build \
            -f Dockerfile.frontend \
            --cache-from "$IMAGE_NAME/frontend:latest" \
            -t "$IMAGE_NAME/frontend:$GITHUB_SHA" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg SANITY_DATASET=$SANITY_DATASET \
            .
          docker push "$IMAGE_NAME/frontend" --all-tags
        env:
          DOCKER_BUILDKIT: 1
          SANITY_DATASET: testing

  build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v33
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Login to GitHub Container Registry
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend with cache and push to registry
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          cd backend
          docker build \
            --cache-from "$IMAGE_NAME/backend:latest" \
            -t "$IMAGE_NAME/backend:$GITHUB_SHA" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            .
          docker push "$IMAGE_NAME/backend" --all-tags
        env:
          DOCKER_BUILDKIT: 1

  kotest_tests:
    runs-on: ubuntu-latest
    needs: build_backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v33
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Pull Docker image
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker pull "$IMAGE_NAME/backend:$GITHUB_SHA"

      - name: Run Kotest tests with Docker Compose
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker compose -f backend/docker-compose.kotest.yaml up --exit-code-from=backend
        env:
          ADMIN_KEY: admin-passord

  cypress_e2e_tests:
    runs-on: ubuntu-latest
    needs: [build_frontend, build_backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files, frontend
        id: changed-files-frontend
        uses: tj-actions/changed-files@v33
        with:
          files: |
            frontend/**
            yarn.lock
            package.json
            Dockerfile.frontend
            docker-compose.cypress.yaml
          files_ignore: |
            *.md
            *.png
            *.ico
            *.svg
            *.test.tsx
            frontend/.gitignore
            frontend/.env.example

      - name: Get changed files, backend
        id: changed-files-backend
        uses: tj-actions/changed-files@v33
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Pull Docker images, depending on what has changed
        if: steps.changed-files-frontend.outputs.any_changed == 'true' || steps.changed-files-backend.outputs.any_changed == 'true'
        run: |
          { if [[ "$FRONTEND_CHANGED" = "true" ]] && [[ "$BACKEND_CHANGED" = "true" ]]; then
              echo "Both changed."
              docker pull "$IMAGE_NAME/frontend:$GITHUB_SHA"
              docker pull "$IMAGE_NAME/backend:$GITHUB_SHA"
            elif [[ "$FRONTEND_CHANGED" = "true" ]]; then
              echo "Only frontend changed."
              docker pull "$IMAGE_NAME/frontend:$GITHUB_SHA"
              docker pull "$IMAGE_NAME/backend:latest"
            else
              echo "Only backend changed."
              docker pull "$IMAGE_NAME/frontend:latest"
              docker pull "$IMAGE_NAME/backend:$GITHUB_SHA"
            fi
          }
        env:
          FRONTEND_CHANGED: ${{ steps.changed-files-frontend.outputs.any_changed }}
          BACKEND_CHANGED: ${{ steps.changed-files-backend.outputs.any_changed }}

      - name: Run Cypress end-to-end tests
        if: steps.changed-files-frontend.outputs.any_changed == 'true' || steps.changed-files-backend.outputs.any_changed == 'true'
        run: docker compose -f docker-compose.cypress.yaml up --exit-code-from=frontend --attach=frontend
        env:
          FRONTEND_TAG: ${{ steps.changed-files-frontend.outputs.any_changed == 'true' && github.sha || 'latest' }}
          BACKEND_TAG: ${{ steps.changed-files-backend.outputs.any_changed == 'true' && github.sha || 'latest' }}
          SANITY_DATASET: testing
          ADMIN_KEY: admin-passord
          NEXTAUTH_SECRET: very-secret-string-123
          FEIDE_CLIENT_ID: ${{ secrets.FEIDE_CLIENT_ID }}
          FEIDE_CLIENT_SECRET: ${{ secrets.FEIDE_CLIENT_SECRET }}
          CYPRESS_FEIDE_USERNAME: ${{ secrets.CYPRESS_FEIDE_USERNAME }}
          CYPRESS_FEIDE_PASSWORD: ${{ secrets.CYPRESS_FEIDE_PASSWORD }}
          CYPRESS_FEIDE_FULL_NAME: ${{ secrets.CYPRESS_FEIDE_FULL_NAME }}
          CYPRESS_FEIDE_EMAIL: ${{ secrets.CYPRESS_FEIDE_EMAIL }}

  migration_tests:
    runs-on: ubuntu-latest
    needs: [build_backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v33
        with:
          files: |
            backend/src/main/resources/db/migration/*.sql
            backend/gradle.properties

      - name: Pull Docker image
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker pull "$IMAGE_NAME/backend:$GITHUB_SHA"

      - name: Download database dump
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          heroku pg:backups:capture -a $HEROKU_APP_NAME
          heroku pg:backups:download -a $HEROKU_APP_NAME
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: 'echo-web-backend-prod'

      - name: Run migration tests
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          docker compose -f backend/docker-compose.yaml up database --wait
          docker cp latest.dump backend-database-1:/
          docker exec -i backend-database-1 pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d postgres latest.dump || true
          docker compose -f backend/docker-compose.yaml up backend & (sleep 15 && docker kill backend-backend-1)
        env:
          TEST_MIGRATION: true
          ADMIN_KEY: admin-passord

  backend_preview:
    runs-on: ubuntu-latest
    needs: [build_backend]
    outputs:
      preview_backend_url: ${{ steps.preview_deploy.outputs.BACKEND_URL || steps.default_value.outputs.BACKEND_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set BACKEND_URL default value
        id: default_value
        run: echo "BACKEND_URL=https://echo-web-containers-dev.norwayeast.azurecontainer.io" >> $GITHUB_OUTPUT

      - name: Get changed files, backend
        id: changed-files-backend
        uses: tj-actions/changed-files@v33
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Get changed files, Terraform
        id: changed-files-tf
        uses: tj-actions/changed-files@v33
        with:
          files: |
            terraform/preview/**

      - name: Setup Terraform
        if: steps.changed-files-backend.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Set environment variables
        id: env_vars
        if: steps.changed-files-backend.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true'
        run: |
          echo "BRANCH_NAME_FORMATTED=$(echo "$BRANCH_NAME" | sed -e 's/[\/_]/-/g')" >> $GITHUB_OUTPUT
          echo "BACKEND_TAG=$BACKEND_TAG" >> $GITHUB_OUTPUT
        env:
          BACKEND_TAG: ${{ steps.changed-files-backend.outputs.any_changed == 'true' && github.sha || 'latest' }}

      - name: Deploy preview container
        id: preview_deploy
        if: steps.changed-files-backend.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true'
        run: |
          cd terraform/preview
          terraform init
          terraform workspace new $WORKSPACE_NAME
          terraform apply -auto-approve
          # Get backend url and output it
          echo "BACKEND_URL=$(terraform output -raw preview_backend_url)" >> $GITHB_OUTPUT
        env:
          TF_VAR_resource_group_name: 'echo-web-${{ steps.env_vars.outputs.BRANCH_NAME_FORMATTED }}'
          TF_VAR_location: norwayeast
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD_DEV }}
          TF_VAR_backend_image: '${{ env.IMAGE_NAME}}/backend:${{ steps.env_vars.outputs.BACKEND_TAG }}'
          ARM_CLIENT_ID: c320aed0-41eb-4089-aedb-8a4ece92c3b5
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: 8afc7368-510a-404a-b4dd-c7351977b037
          ARM_TENANT_ID: 10086e44-d4c5-4039-ab23-dc49610f7879
          WORKSPACE_NAME: ${{ steps.env_vars.outputs.BRANCH_NAME_FORMATTED }}

      - name: Find comment
        id: fc
        if: steps.changed-files-backend.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true'
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: beep boop!

      - name: Create comment
        if: steps.fc.outputs.comment-id == '' && (steps.changed-files.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true')
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.REPO_PAT }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **beep boop!**

            I just deployed a backend preview to ${{ steps.preview_deploy.outputs.BACKEND_URL }} :rocket:

      - name: Update comment
        if: steps.fc.outputs.comment-id != '' && (steps.changed-files.outputs.any_changed == 'true' || steps.changed-files-tf.outputs.any_changed == 'true')
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.REPO_PAT }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            **beep boop!**

            I just deployed a *new* backend preview to ${{ steps.preview_deploy.outputs.BACKEND_URL }} :rewind:

  vercel_preview:
    runs-on: ubuntu-latest
    needs: [backend_preview]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Vercel Action
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          PR_LABELS: false
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: team_BalajEhvjfBqbkouJFI9761w
          VERCEL_PROJECT_ID: prj_8VUZLEU0bcCYk0j9aHHgorqmtuM0
          BUILD_ENV: |
            SANITY_DATASET=production
            ADMIN_KEY=${{ secrets.ADMIN_KEY_DEV }}
            NEXT_PUBLIC_BACKEND_URL=${{ needs.backend_preview.outputs.preview_backend_url }}
            NEXTAUTH_SECRET=secret123AsDef£123

      - name: Seed backend with Sanity data
        run: curl -v ${{ needs.backend_preview.outputs.preview_backend_url }}/sanity -u admin:$TF_VAR_admin_key --basic || true
