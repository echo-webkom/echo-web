name: Push images & deploy dev backend
on:
  push:
    branches: [master]

permissions:
  packages: write
  actions: read

env:
  IMAGE_NAME: 'ghcr.io/${{ github.repository }}'
  TF_VAR_subscription_id: 8afc7368-510a-404a-b4dd-c7351977b037
  TF_VAR_resource_group_name: echo-web-dev
  TF_VAR_location: norwayeast
  TF_VAR_db_user: echoadmindev
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD_DEV }}
  TF_VAR_db_name: echo-web-db-dev
  TF_VAR_firewall_name: echo-web-db-firewall-dev
  TF_VAR_container_group_name: echo-web-containers-dev
  TF_VAR_backend_container_name: echo-web-backend-dev
  TF_VAR_admin_key: ${{ secrets.ADMIN_KEY_DEV }}
  ARM_CLIENT_ID: c320aed0-41eb-4089-aedb-8a4ece92c3b5
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: 8afc7368-510a-404a-b4dd-c7351977b037
  ARM_TENANT_ID: 10086e44-d4c5-4039-ab23-dc49610f7879

jobs:
  docker_push_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            frontend
            yarn.lock
            package.json
            Dockerfile.frontend
          files_ignore: |
            *.md
            *.png
            *.ico
            *.svg
            *.test.tsx
            frontend/.gitignore
            frontend/.env.example

      - name: Login to GitHub Container Registry
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build frontend with cache and push to registry
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          docker build \
            -f Dockerfile.frontend \
            --cache-from "$IMAGE_NAME/frontend:latest" \
            -t "$IMAGE_NAME/frontend:$TAG" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg SANITY_DATASET=$SANITY_DATASET \
            .
          docker push "$IMAGE_NAME/frontend" --all-tags
        env:
          DOCKER_BUILDKIT: 1
          SANITY_DATASET: testing
          TAG: latest

  docker_push_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Login to GitHub Container Registry
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend with cache and push to registry
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          cd backend
          docker build \
            --cache-from "$IMAGE_NAME/backend" \
            -t "$IMAGE_NAME/backend:$TAG" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            .
          docker push "$IMAGE_NAME/backend" --all-tags
        env:
          DOCKER_BUILDKIT: 1
          TAG: latest

  terraform_dev:
    runs-on: ubuntu-latest
    needs: [docker_push_backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files, Terraform
        id: changed-files-tf
        uses: tj-actions/changed-files@v34
        with:
          files: |
            terraform/**

      - name: Get changed files, backend
        id: changed-files-backend
        uses: tj-actions/changed-files@v34
        with:
          files: |
            backend/**
          files_ignore: |
            backend/.gitignore
            backend/.env.example

      - name: Setup Terraform
        if: steps.changed-files-tf.outputs.any_changed == 'true' || steps.changed-files-backend.outputs.any_changed == 'true'
        uses: hashicorp/setup-terraform@v2

      - name: Apply Terraform changes
        if: steps.changed-files-tf.outputs.any_changed == 'true' || steps.changed-files-backend.outputs.any_changed == 'true'
        run: |
          cd terraform/dev
          terraform init
          terraform apply -auto-approve
        env:
          TF_VAR_environment: develop

      - name: Redeploy new container
        if: steps.changed-files-tf.outputs.any_changed != 'true' && steps.changed-files-backend.any_changed == 'true'
        run: |
          cd terraform/dev
          terraform init
          terraform destroy -auto-approve -target=azurerm_container_group.echo_web_containers
          terraform apply -auto-approve -target=azurerm_container_group.echo_web_containers
        env:
          TF_VAR_environment: develop
