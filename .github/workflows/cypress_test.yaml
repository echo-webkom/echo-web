name: Cypress
on:
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io
  BACKEND_TAG: latest-prod

permissions:
  packages: write
  actions: read

jobs:
  cypress_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build frontend with cache
        run: |
          docker build \
            --cache-from "$REGISTRY/$GITHUB_REPOSITORY" \
            -t "$REGISTRY/$GITHUB_REPOSITORY:$TAG" \
            -t "$REGISTRY/$GITHUB_REPOSITORY:$GITHUB_SHA" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg SANITY_TOKEN=$SANITY_TOKEN \
            --build-arg SANITY_DATASET=$SANITY_DATASET \
            .
          docker push "$REGISTRY/$GITHUB_REPOSITORY" --all-tags
        env:
          DOCKER_BUILDKIT: 1
          REGISTRY: ${{ env.REGISTRY }}
          TAG: latest
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
          SANITY_DATASET: ${{ secrets.SANITY_DATASET }}

      - name: Pull backend image
        run: docker pull "$REGISTRY/$BACKEND_REPOSITORY:$TAG"
        env:
          REGISTRY: ${{ env.REGISTRY }}
          BACKEND_REPOSITORY: echo-webkom/echo-web-backend
          TAG: ${{ env.BACKEND_TAG }}

      - name: Run Cypress end-to-end tests against backend
        run: docker-compose up --exit-code-from=frontend
        env:
          REGISTRY: ${{ env.REGISTRY }}
          TAG: ${{ env.BACKEND_TAG }}
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
          SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
          ADMIN_KEY: admin-passord
