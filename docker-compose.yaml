version: '3.9'
services:
  backend:
    build:
      context: .
      cache_from:
        - '${REGISTRY:-ghcr.io}/echo-webkom/echo-web-backend:${TAG:-latest-dev}'
    image: '${REGISTRY:-ghcr.io}/echo-webkom/echo-web-backend:${TAG:-latest-dev}'
    # Don't start backend before database is up.
    depends_on:
      database:
        condition: service_healthy
    links:
      - database
    ports:
      - '8080:8080'
    environment:
      DATABASE_URL: postgres://postgres:password@database/postgres
      # Value of DEV doesn't matter, only that it's defined.
      DEV: 'yes'
      # Values from .env file
      ADMIN_KEY: ${ADMIN_KEY:?Must specify ADMIN_KEY in .env file or environment.}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:?Must specify SENDGRID_API_KEY in .env file or environment.}
      SEND_EMAIL_REGISTRATION: ${SEND_EMAIL_REGISTRATION:?Must specify SEND_EMAIL_REGISTRATION in .env file or environment.}
      SEND_EMAIL_HAPPENING: ${SEND_EMAIL_HAPPENING:?Must specify SEND_EMAIL_HAPPENING in .env file or environment.}

  database:
    # Postgres 13.4 is the version Heroku uses.
    image: postgres:13.4-alpine
    restart: always
    ports:
      - '5432:5432'
    # Check if database is ready.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
